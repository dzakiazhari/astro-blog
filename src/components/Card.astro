---
import { slugifyStr } from "@/utils/slugify";
import type { CollectionEntry } from "astro:content";
import { getPath } from "@/utils/getPath";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import IconNoteCard from "@/assets/icons/IconNoteCard.svg";

export interface Props extends CollectionEntry<"blog"> {
  variant?: "h2" | "h3";
  showDescription?: boolean;
}

const {
  variant = "h2",
  data,
  id,
  filePath,
  showDescription = true,
} = Astro.props as Props;

const { title, description, pubDatetime } = data;

const toIsoDots = (value: string | number | Date) => {
  const date = new Date(value);

  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, "0");
  const day = String(date.getDate()).padStart(2, "0");

  return `${year}.${month}.${day}`;
};

const formattedDate = toIsoDots(pubDatetime);

const headerProps = {
  style: { viewTransitionName: slugifyStr(title) },
};
---

<li class="my-0 h-full">
  <a
    href={getPath(id, filePath)}
    class="group relative flex h-full flex-col justify-between gap-3 overflow-hidden rounded-[var(--radius-md)] border border-[color:var(--card-border)] bg-[color:var(--surface-raised)] px-3 py-3.5 transition-colors duration-200 ease-out hover:border-[color:var(--card-border-strong)] focus-visible:ring-2 focus-visible:ring-[color:var(--ring-accent)] focus-visible:outline-none"
    data-astro-prefetch="viewport"
  >
    <!-- Marker sizing comes from --card-marker-width/--card-marker-offset in src/styles/global.css -->
    <span
      aria-hidden="true"
      class="pointer-events-none absolute top-3 bottom-3 left-0 w-[var(--card-marker-width)] -translate-x-[var(--card-marker-offset)] bg-[color:var(--card-marker)] transition-colors duration-200 ease-out [clip-path:polygon(0%_0,100%_50%,0%_100%)] group-hover:bg-[color:var(--card-marker-hover)] group-focus-visible:bg-[color:var(--card-marker-hover)]"
    ></span>

    <div class="relative z-[1] space-y-2.5 ps-2.5">
      <div class="flex items-center gap-1.5">
        <span aria-hidden="true" class="card-icon">
          <IconNoteCard class="h-[0.8rem] w-[0.8rem]" />
        </span>
        <p
          class="text-[0.56rem] font-semibold tracking-[0.24em] text-[color:var(--muted-text)] uppercase"
        >
          {formattedDate}
        </p>
      </div>
      {
        variant === "h2" ? (
          <h2
            {...headerProps}
            class="text-[1.18rem] font-semibold text-balance text-[color:var(--body-text)] transition-colors duration-150 group-hover:text-[color:var(--nav-text-strong)] group-focus-visible:text-[color:var(--nav-text-strong)] sm:text-[1.28rem]"
          >
            {title}
          </h2>
        ) : (
          <h3
            {...headerProps}
            class="text-[0.98rem] font-semibold text-balance text-[color:var(--body-text)] transition-colors duration-150 group-hover:text-[color:var(--nav-text-strong)] group-focus-visible:text-[color:var(--nav-text-strong)]"
          >
            {title}
          </h3>
        )
      }
      {
        showDescription && (
          <p
            class="text-[0.84rem] leading-snug text-[color:var(--muted-text)] sm:text-[0.9rem]"
            style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;"
          >
            {description}
          </p>
        )
      }
    </div>

    <span
      class="mt-auto inline-flex items-center gap-0.5 ps-2 text-[0.56rem] font-semibold tracking-[0.22em] text-[color:var(--nav-text)] uppercase transition-colors duration-150 group-hover:text-[color:var(--nav-text-strong)] group-focus-visible:text-[color:var(--nav-text-strong)]"
    >
      Read
      <IconArrowRight
        class="h-[0.85rem] w-[0.85rem] transition-transform duration-200 ease-out group-hover:translate-x-[0.25rem] group-focus-visible:translate-x-[0.25rem] rtl:rotate-180"
      />
    </span>
  </a>
</li>
