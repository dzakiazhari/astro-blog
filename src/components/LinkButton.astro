---
export interface Props {
  id?: string;
  href: string;
  class?: string;
  ariaLabel?: string;
  title?: string;
  disabled?: boolean;
  target?: string;
  rel?: string;
}

const {
  id,
  href,
  class: className = "",
  ariaLabel,
  title,
  disabled = false,
  target,
  rel,
} = Astro.props;

const computedRel = (() => {
  if (target !== "_blank") {
    return rel;
  }

  const safeTokens = new Set(
    (rel ?? "")
      .split(/\s+/)
      .map(token => token.trim())
      .filter(Boolean),
  );

  safeTokens.add("noopener");
  safeTokens.add("noreferrer");

  const merged = Array.from(safeTokens).join(" ");

  return merged === "" ? undefined : merged;
})();
---

{
  disabled ? (
    <span
      id={id}
      class:list={["group inline-block", className]}
      title={title}
      aria-disabled={disabled}
    >
      <slot />
    </span>
  ) : (
    <a
      id={id}
      {href}
      class:list={["group inline-block hover:text-accent", className]}
      aria-label={ariaLabel}
      title={title}
      target={target}
      rel={computedRel}
    >
      <slot />
    </a>
  )
}
