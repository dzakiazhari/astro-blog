---
import IconArchive from "@/assets/icons/IconArchive.svg";
import IconMenuDeep from "@/assets/icons/IconMenuDeep.svg";
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconSearch from "@/assets/icons/IconSearch.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import IconX from "@/assets/icons/IconX.svg";
import LogoUnfold from "@/assets/icons/logo-unfold.svg";
import { SITE } from "@/config";

const { pathname } = Astro.url;

const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentPathArray = currentPath.split("/").filter(Boolean);
  const pathArray = path.split("/").filter(Boolean);

  return currentPath === path || currentPathArray[0] === pathArray[0];
};

type PrefetchSetting = false | "auto" | "hover" | "tap" | "viewport" | "load";

interface NavItem {
  href: string;
  label: string;
  prefetch?: PrefetchSetting;
  external?: boolean;
}

const navItems: NavItem[] = [
  { href: "/posts", label: "Posts", prefetch: "viewport" },
  { href: "/tags", label: "Tags", prefetch: "viewport" },
  { href: "/about", label: "About", prefetch: "viewport" },
];

const resolvePrefetchAttr = (value: PrefetchSetting | undefined) => {
  if (value === undefined) {
    return "auto" as const;
  }

  if (value === false) {
    return "false" as const;
  }

  return value;
};

if (SITE.notesUrl) {
  navItems.push({
    href: SITE.notesUrl,
    label: "Notes",
    prefetch: false,
    external: true,
  });
}

if (SITE.showArchives) {
  navItems.push({
    href: "/archives",
    label: "Archives",
    prefetch: "viewport" as const,
  });
}
---

<header class="pt-8 pb-10">
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute top-4 left-1/2 z-50 -translate-x-1/2 -translate-y-full rounded-md bg-foreground px-4 py-2 text-xs font-semibold tracking-[0.26em] text-background uppercase transition focus:translate-y-0 focus:outline-none focus-visible:ring-2 focus-visible:ring-accent/60"
  >
    Skip to content
  </a>
  <div class="site-shell">
    <div
      class="rounded-xl border border-border/70 bg-background/75 p-5 shadow-[0_26px_70px_rgba(24,20,45,0.12)] backdrop-blur md:p-6"
    >
      <div class="flex flex-col gap-6 md:flex-row md:gap-12">
        <div
          class="flex w-full items-start justify-between gap-4 md:w-auto md:flex-col md:gap-5"
        >
          <div>
            <a
              href="/"
              class="group inline-flex items-baseline gap-3 text-2xl font-semibold tracking-[0.32em] text-foreground uppercase transition-colors duration-150 hover:text-accent focus-visible:text-accent"
              data-astro-prefetch="viewport"
            >
              <span class="leading-none">{SITE.title}</span>
              <LogoUnfold
                class="mt-1 h-[1.25em] w-auto text-accent transition-transform duration-300 group-hover:rotate-12"
              />
            </a>
            <p
              class="mt-3 max-w-xl text-sm leading-relaxed text-foreground/65 md:max-w-sm"
              style="display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; overflow: hidden;"
            >
              {SITE.desc}
            </p>
          </div>
          <button
            id="menu-btn"
            class="inline-flex items-center gap-2 rounded-lg border border-border/70 px-3 py-2 text-[0.72rem] font-semibold tracking-[0.24em] text-foreground/70 uppercase transition-colors duration-150 hover:border-accent/40 hover:text-foreground focus-visible:ring-2 focus-visible:ring-accent/40 focus-visible:outline-none md:hidden"
            aria-label="Open Menu"
            aria-expanded="false"
            aria-controls="menu-items"
          >
            Menu
            <IconMenuDeep id="menu-icon" class="size-4" />
            <IconX id="close-icon" class="hidden size-4" />
          </button>
        </div>

        <nav
          class="md:flex md:flex-1 md:items-start md:justify-between"
          aria-label="Primary"
        >
          <div
            id="menu-items"
            class:list={[
              "mt-4 grid gap-5 border-t border-border/60 pt-4 text-[0.78rem] font-semibold tracking-[0.24em] text-foreground/70 uppercase",
              "md:mt-0 md:grid-cols-[minmax(12rem,1fr)_auto] md:items-start md:gap-10 md:border-t-0 md:pt-0 md:text-[0.7rem]",
              "hidden md:grid",
            ]}
          >
            <ul class="grid gap-3">
              {
                navItems.map(item => (
                  <li>
                    <a
                      href={item.href}
                      class:list={[
                        "flex items-center justify-between gap-4 border-b border-transparent pb-2 transition-colors duration-150 hover:text-foreground focus-visible:text-accent",
                        { "border-accent/50 text-accent": isActive(item.href) },
                      ]}
                      target={item.external ? "_blank" : undefined}
                      rel={item.external ? "noopener noreferrer" : undefined}
                      data-astro-prefetch={resolvePrefetchAttr(item.prefetch)}
                    >
                      <span>{item.label}</span>
                      {item.label === "Archives" ? (
                        <IconArchive class="size-4" />
                      ) : item.external ? (
                        <span aria-hidden="true">â†—</span>
                      ) : (
                        <span aria-hidden="true" class="text-foreground/40">
                          /
                        </span>
                      )}
                    </a>
                  </li>
                ))
              }
            </ul>

            <div
              class="grid gap-3 text-[0.7rem] tracking-[0.26em] uppercase md:justify-items-end"
            >
              <a
                href="/search"
                class:list={[
                  "inline-flex items-center gap-3 rounded-lg border border-transparent px-3 py-2 text-foreground/70 transition-colors duration-150 hover:border-accent/40 hover:text-foreground",
                  { "border-accent/40 text-accent": isActive("/search") },
                ]}
                data-astro-prefetch="viewport"
              >
                <span>Search</span>
                <IconSearch class="size-4" />
              </a>
              {
                SITE.lightAndDarkMode && (
                  <button
                    id="theme-btn"
                    class="inline-flex items-center gap-3 rounded-lg border border-border/70 px-3 py-2 text-foreground/70 transition-colors duration-150 hover:border-accent/40 hover:text-foreground focus-visible:ring-2 focus-visible:ring-accent/40 focus-visible:outline-none"
                    title="Toggles light & dark"
                    aria-label="auto"
                    aria-live="polite"
                  >
                    <span>Theme</span>
                    <span class="relative inline-flex size-4 items-center justify-center">
                      <IconMoon class="absolute inset-0 scale-100 rotate-0 transition-all duration-300 dark:scale-0 dark:-rotate-90" />
                      <IconSunHigh class="absolute inset-0 scale-0 rotate-90 transition-all duration-300 dark:scale-100 dark:rotate-0" />
                    </span>
                  </button>
                )
              }
            </div>
          </div>
        </nav>
      </div>
    </div>
  </div>
</header>

<script>
  (function () {
    const attachToggle = () => {
      const menuBtn = document.querySelector<HTMLButtonElement>("#menu-btn");
      const menuItems = document.querySelector<HTMLElement>("#menu-items");
      const menuIcon = document.querySelector<SVGElement>("#menu-icon");
      const closeIcon = document.querySelector<SVGElement>("#close-icon");

      if (!menuBtn || !menuItems || !menuIcon || !closeIcon) {
        return;
      }

      if (menuBtn.dataset.navBound === "true") {
        return;
      }

      const toggle = () => {
        const openMenu = menuBtn.getAttribute("aria-expanded") === "true";

        menuBtn.setAttribute("aria-expanded", openMenu ? "false" : "true");
        menuBtn.setAttribute(
          "aria-label",
          openMenu ? "Open Menu" : "Close Menu"
        );

        menuItems.classList.toggle("hidden");
        menuIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      };

      menuBtn.addEventListener("click", toggle);
      menuBtn.dataset.navBound = "true";
    };

    attachToggle();

    document.addEventListener("astro:after-swap", attachToggle);
    document.addEventListener("astro:page-load", attachToggle);
  })();
</script>
