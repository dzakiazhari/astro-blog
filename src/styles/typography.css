@reference './global.css';

@layer base {
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply wrap-break-word;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply text-balance;
  }

  p {
    @apply text-pretty;
  }
}

@layer components {
  .prose {
    @apply text-foreground text-[1rem] leading-[1.65];

    :where(p):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground/85 my-6;
    }

    :where(h1, h2, h3, h4, h5, h6):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground scroll-mt-32 font-semibold tracking-tight xl:scroll-mt-20;
    }

    :first-child:not(:where(.not-prose, .not-prose *)) {
      @apply mt-0;
    }

    /* Don't use an <h1> in your posts, one is already generated in blog/[...id].astro */
    :where(h1):not(:where(.not-prose, .not-prose *)) {
      @apply mt-10 mb-6 text-[1.85rem] leading-[1.25];
    }

    :where(h2):not(:where(.not-prose, .not-prose *)) {
      @apply mt-9 mb-5 text-[1.6rem] leading-[1.3];
    }

    :where(h3):not(:where(.not-prose, .not-prose *)) {
      @apply mt-8 mb-4 text-[1.35rem];
    }

    :where(h4):not(:where(.not-prose, .not-prose *)) {
      @apply mt-7 mb-3 text-[1.15rem];
    }

    :where(h5, h6):not(:where(.not-prose, .not-prose *)) {
      @apply mt-6 mb-3 text-[1.03rem];
    }

    :where(a):not(:where(.not-prose, .not-prose *)) {
      color: var(--link-plain);
      font-weight: 600;
      text-decoration: none;
      border-bottom: 1px solid
        color-mix(in srgb, var(--link-plain) 65%, transparent);
      padding-bottom: 0.08em;
      transition:
        color 160ms ease,
        border-color 160ms ease,
        background-color 160ms ease;
      word-break: break-word;
    }

    :where(a):not(:where(.not-prose, .not-prose *)):hover,
    :where(a):not(:where(.not-prose, .not-prose *)):focus-visible {
      color: var(--link-hover);
      border-color: color-mix(in srgb, var(--link-hover) 78%, transparent);
      background: linear-gradient(
        120deg,
        color-mix(in srgb, var(--link-hover) 18%, transparent),
        transparent
      );
    }

    :where(strong):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground font-semibold;
    }

    :where(ul):not(:where(.not-prose, .not-prose *)) {
      @apply marker:text-foreground/30 my-5 ml-6 list-disc [&>li]:mt-2;
    }

    :where(ul > li):not(:where(.not-prose, .not-prose *))::marker {
      color: color-mix(in srgb, var(--secondary) 60%, var(--muted-text) 40%);
    }

    :where(ol):not(:where(.not-prose, .not-prose *)) {
      @apply marker:text-foreground/30 my-5 ml-6 list-decimal [&>li]:mt-2;
      @apply [&[type='A']]:list-[upper-alpha] [&[type='I']]:list-[upper-roman] [&[type='a']]:list-[lower-alpha] [&[type='i']]:list-[lower-roman];
    }

    :where(li):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground/85 pl-2 [&>p]:my-0;
    }

    :where(ul ul, ol ol, ul ol, ol ul):not(:where(.not-prose, .not-prose *)) {
      @apply marker:text-foreground/30 my-2 ml-6;
    }

    :where(code):not(:where(.not-prose, .not-prose *)) {
      background: var(--muted);
      color: #2f8dc7;
      font-family: var(--font-mono, 'iA Writer Mono S'), monospace;
      font-weight: 500;
      border-radius: var(--radius-xs);
      padding: 0.18rem 0.38rem;
      font-size: 0.95em;
      word-break: break-word;
      box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.04);
      position: relative;
      z-index: 0;
      @apply [&>span[data-line='']>*]:text-(--shiki-light) dark:[&>span[data-line='']>*]:text-(--shiki-dark);
    }

    :where(blockquote):not(:where(.not-prose, .not-prose *)) {
      position: relative;
      margin: 2.5rem 0;
      padding: 1.6rem 2.2rem 1.6rem 2.8rem;
      width: 100%;
      color: color-mix(in srgb, var(--body-text) 90%, var(--muted-text) 10%);
      font-size: 0.98rem;
      line-height: 1.55;
      border-left: 4px solid var(--secondary);
      border-radius: var(--radius-sm);
      background: color-mix(in srgb, var(--nav-surface) 88%, white 12%);
      box-shadow: inset 0 0 0 1px
        color-mix(in srgb, var(--border) 65%, transparent);
      isolation: isolate;
    }

    :where(blockquote):not(:where(.not-prose, .not-prose *))::before,
    :where(blockquote):not(:where(.not-prose, .not-prose *))::after {
      content: '';
      position: absolute;
      left: 0;
      width: 100%;
      height: 2px;
      background: linear-gradient(
        90deg,
        var(--secondary),
        color-mix(in srgb, var(--nav-surface) 72%, white 28%)
      );
    }

    :where(blockquote):not(:where(.not-prose, .not-prose *))::before {
      top: 0;
      border-top-left-radius: inherit;
    }

    :where(blockquote):not(:where(.not-prose, .not-prose *))::after {
      bottom: 0;
      border-bottom-left-radius: inherit;
    }

    :where(blockquote p):not(:where(.not-prose, .not-prose *)) {
      position: relative;
      margin-block: 0.35rem;
      color: inherit;
    }

    :where(blockquote p:first-of-type):not(
        :where(.not-prose, .not-prose *)
      )::before {
      content: none;
    }

    :where(hr):not(:where(.not-prose, .not-prose *)) {
      @apply my-8 border-t;
      border-color: color-mix(in srgb, var(--border) 85%, transparent);
    }

    :where(table):not(:where(.not-prose, .not-prose *)) {
      @apply mx-auto my-6 block max-w-fit overflow-x-auto text-sm;
    }

    :where(thead):not(:where(.not-prose, .not-prose *)) {
      @apply border-muted-foreground/30 border-b;
      border-color: color-mix(in srgb, var(--border) 85%, transparent);
    }

    :where(th):not(:where(.not-prose, .not-prose *)) {
      @apply px-4 py-2 font-medium;
      @apply text-left [&[align=center]]:text-center [&[align=right]]:text-right;
      color: color-mix(in srgb, var(--body-text) 92%, var(--muted-text) 8%);
      border-bottom: 1px solid
        color-mix(in srgb, var(--border) 82%, transparent);
    }

    :where(tr):not(:where(.not-prose, .not-prose *)) {
      @apply border-muted-foreground/30 border-y first:border-t-0 last:border-b-0;
      border-color: color-mix(in srgb, var(--border) 80%, transparent);
    }

    :where(td):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground/85 small px-4 py-2 align-top break-words [&>*]:first:mt-0! [&>*]:last:mb-0!;
      @apply text-left [&[align=center]]:text-center [&[align=right]]:text-right;
    }

    :where(img, video, figure, .expressive-code):not(
      :where(.not-prose, .not-prose *)
    ) {
      @apply mx-auto my-6;
    }

    :where(pre):not(:where(.not-prose, .not-prose *)) {
      @apply max-h-[min(68vh,1000px)]! overflow-y-auto [&::-webkit-scrollbar-corner]:hidden;
      background: var(--code-card-surface);
      border: 1px solid var(--code-card-border);
      border-radius: var(--radius-md);
      padding: clamp(1.2rem, 3vw, 1.6rem);
      box-shadow: inset 0 0 0 1px
        color-mix(in srgb, var(--code-card-border) 40%, transparent);
    }

    :where(.code-block):not(:where(.not-prose, .not-prose *)) {
      position: relative;
      margin-block: 1.8rem;
      padding: 0;
      border-radius: var(--radius-lg);
      background: var(--code-card-surface);
      border: 1px solid var(--code-card-border);
      box-shadow: var(--code-card-shadow);
      isolation: isolate;
      overflow: hidden;
    }

    :where(.code-block pre):not(:where(.not-prose, .not-prose *)) {
      margin: 0;
      padding-block: clamp(1.4rem, 4vw, 1.85rem) clamp(1.4rem, 4vw, 1.75rem);
      padding-inline: clamp(1.4rem, 4vw, 1.75rem);
      padding-inline-end: clamp(2.6rem, 7vw, 3.75rem);
      background: transparent;
      border: none;
      border-radius: inherit;
      box-shadow: none;
      overflow: auto;
    }

    :where(.code-block pre code):not(:where(.not-prose, .not-prose *)) {
      background: transparent;
      border: 0;
      box-shadow: none;
      padding: 0;
    }

    :where(.code-block .copy-code):not(:where(.not-prose, .not-prose *)) {
      position: absolute;
      inset-inline-end: clamp(0.85rem, 2.5vw, 1.4rem);
      inset-block-start: var(--copy-button-top, var(--code-copy-offset));
      transform: translate3d(0, -50%, 0);
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.35rem;
      padding: 0.38rem 0.88rem;
      border-radius: var(--radius-sm);
      border: 1px solid var(--code-copy-border);
      background: var(--code-copy-bg);
      color: var(--code-copy-text);
      font-size: 0.68rem;
      font-weight: 600;
      letter-spacing: 0.22em;
      text-transform: uppercase;
      line-height: 1;
      opacity: 0;
      pointer-events: none;
      z-index: 3;
      transition:
        background-color 160ms ease,
        color 160ms ease,
        border-color 160ms ease,
        opacity 160ms ease,
        transform 160ms ease;
    }

    :where(.code-block .copy-code):not(:where(.not-prose, .not-prose *)):hover {
      transform: translate3d(0, -50%, 0) translateY(-0.15rem);
      background: var(--code-copy-hover-bg);
      color: var(--code-copy-success);
      border-color: color-mix(
        in srgb,
        var(--code-copy-border) 58%,
        transparent
      );
      pointer-events: auto;
      opacity: 1;
    }

    :where(.code-block .copy-code):not(
        :where(.not-prose, .not-prose *)
      ):focus-visible {
      outline: 2px dotted var(--code-copy-ring);
      outline-offset: 2px;
      transform: translate3d(0, -50%, 0) translateY(-0.12rem);
      background: var(--code-copy-hover-bg);
      color: var(--code-copy-success);
      border-color: color-mix(
        in srgb,
        var(--code-copy-border) 50%,
        var(--secondary) 50%
      );
      opacity: 1;
      pointer-events: auto;
    }

    :where(.code-block .copy-code[data-state='copied']):not(
      :where(.not-prose, .not-prose *)
    ) {
      background: var(--code-copy-active-bg);
      color: var(--code-copy-success);
      border-color: color-mix(
        in srgb,
        var(--code-copy-border) 46%,
        var(--secondary) 54%
      );
      opacity: 1;
      pointer-events: auto;
    }

    :where(.code-block):where(:hover, :focus-within):not(
        :where(.not-prose, .not-prose *)
      )
      .copy-code {
      opacity: 1;
      pointer-events: auto;
    }

    @media (hover: none) {
      :where(.code-block .copy-code):not(:where(.not-prose, .not-prose *)) {
        opacity: 1;
        pointer-events: auto;
      }
    }

    @media (max-width: 768px) {
      :where(.code-block):not(:where(.not-prose, .not-prose *)) {
        margin-block: 1.4rem;
      }
    }

    @media (max-width: 640px) {
      :where(.code-block .copy-code):not(:where(.not-prose, .not-prose *)) {
        inset-inline-end: 0.75rem;
        letter-spacing: 0.18em;
      }
    }

    :where(summary):not(:where(.not-prose, .not-prose *)) {
      @apply [&~*]:small [&~*>*]:first:mt-0! [&~*>*]:last:mb-0!;
    }

    :where(kbd):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground bg-muted rounded-md border px-2 py-1 text-xs font-medium;
    }

    :where(.katex-display):not(:where(.not-prose, .not-prose *)) {
      @apply text-foreground/80 my-6 overflow-x-auto overflow-y-hidden py-2 tracking-normal;
    }
  }
}

@utility small {
  @apply text-sm leading-6 [&_code]:text-xs [&_img,video,figure,details,blockquote,.katex-display,.expressive-code]:my-4! [&_li,ol]:mt-0 [&_p]:my-2! [&_ul]:my-0;
}
